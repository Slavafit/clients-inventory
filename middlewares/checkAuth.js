const { Markup } = require('telegraf');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function requestPhone(ctx) {
 return ctx.reply('‚ö†Ô∏è –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:',
    Markup.keyboard([
        [Markup.button.contactRequest('üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–∫—É—â–∏–º –Ω–æ–º–µ—Ä–æ–º')],
         ['‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä']
     ]).oneTime().resize()
 );
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Middleware
const checkAuth = (User) => async (ctx, next) => {
    const telegramId = ctx.from.id || (ctx.callbackQuery && ctx.callbackQuery.from.id);
    
    if (!telegramId) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        return; 
    }

    // 1. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (bot.on('contact'))
    if (ctx.message && ctx.message.contact) {
        return next(); 
    }

    const user = await User.findOne({ telegramId });

    // 2. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä"
    if (ctx.message && ctx.message.text === '‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä') {
        return next();
    }
    
    // 3. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –õ–Æ–ë–û–ô —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞
    if (user && user.currentStep === 'awaiting_new_phone' && ctx.message && ctx.message.text) {
        return next();
    }

    // --- –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ---
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ò–õ–ò –æ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –Ω–æ–º–µ—Ä
    if (!user || !user.phone) {
        // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–º–∞–Ω–¥—ã, –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç) –ø—Ä–æ—Å–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω
        if (ctx.updateType === 'message' || ctx.updateType === 'callback_query') {
            return requestPhone(ctx);
        }
    }
    
    // –¢–µ–ª–µ—Ñ–æ–Ω –µ—Å—Ç—å, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
    next();
};

module.exports = {
  checkAuth,
  requestPhone
};