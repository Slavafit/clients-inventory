const { Markup } = require('telegraf');
const { requestPhone } = require('../middlewares/checkAuth'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—Ä–æ—Å–∞

// --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ò –°–û–•–†–ê–ù–ï–ù–ò–Ø –ö–û–ù–¢–ê–ö–¢–ê ---
const handleContact = (User, showMainMenu) => async (ctx) => {
    const phone = ctx.message.contact.phone_number;
    await User.findOneAndUpdate({ telegramId: ctx.from.id }, { phone });
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    await ctx.reply(`–í–∞—à –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${phone}`, Markup.removeKeyboard());
    
    return showMainMenu(ctx);
};

// --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–ú–ï–ù–´ –ù–û–ú–ï–†–ê (Hears 'üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä') ---
const handleChangePhone = (User) => async (ctx) => {
    const user = await User.findOne({ telegramId: ctx.from.id });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ
    user.phone = null; 
    
    // –°—Ä–∞–∑—É –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —à–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
    user.currentStep = 'awaiting_new_phone'; 
    
    await user.save();
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞, —É–±–∏—Ä–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    return ctx.reply('‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +79123456789):', Markup.removeKeyboard());
};

// --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –í–°–ï–• –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ---
const registerAuthHandlers = (bot, User, showMainMenu) => {
    
    // 1. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
    bot.start(async (ctx) => {
        let user = await User.findOne({ telegramId: ctx.from.id });

        if (!user) {
            user = await User.create({ telegramId: ctx.from.id });
        } 
        
        // –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ.
        if (!user.phone) {
            await ctx.reply('–ü—Ä–∏–≤–µ—Ç! üëã');
            return requestPhone(ctx); 
        }
        
        // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        await ctx.reply(`–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${ctx.from.first_name}!`);
        return showMainMenu(ctx);
    });

    // 2. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–µ–¥–∏–Ω—ã–π –¥–ª—è start –∏ —Å–º–µ–Ω—ã –Ω–æ–º–µ—Ä–∞)
    bot.on('contact', handleContact(User, showMainMenu));

    // 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –Ω–æ–º–µ—Ä–∞ (–∫–Ω–æ–ø–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é)
    bot.hears('üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä', handleChangePhone(User));
};

module.exports = {
    registerAuthHandlers,
    handleContact,
    handleChangePhone
};